{"version":3,"sources":["Components/Icon.js","App.js","index.js"],"names":["Icon","name","className","itemArray","Array","fill","App","useState","isCross","setIsCross","winMessage","setWinMessage","changeItem","itemNumber","toast","type","Container","position","theme","Row","Col","md","Button","color","onClick","map","item","index","Card","CardBody","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAaeA,EAXF,SAAC,GACZ,OADyB,EAAXC,MAEZ,IAAK,SACH,OAAO,cAAC,IAAD,CAAaC,UAAU,UAChC,IAAK,QACH,OAAO,cAAC,IAAD,CAASA,UAAU,UAC5B,QACE,OAAO,cAAC,IAAD,CAAOA,UAAU,Y,+DCAxBC,EAAY,IAAIC,MAAM,GAAGC,KAAK,SAgHrBC,EA9GH,WACV,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KA4DMC,EAAa,SAACC,GAClB,OAAIH,EACKI,YAAMJ,EAAY,CAAEK,KAAM,YAEL,UAA1BZ,EAAUU,GAILC,YAAM,iBAAkB,CAAEC,KAAM,WAHvCZ,EAAUU,GAAcL,EAAU,QAAU,SAC5CC,GAAYD,QAxDK,UAAjBL,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,WAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,WAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,WAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,WAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,WAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,WAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,WAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,cAkBjB,OACE,eAACa,EAAA,EAAD,CAAWd,UAAU,MAArB,UACE,cAAC,IAAD,CAAgBe,SAAS,gBAAgBC,MAAM,YAC/C,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGnB,UAAU,cAAtB,UACGQ,EACC,sBAAKR,UAAU,YAAf,UACE,oBAAIA,UAAU,2CAAd,SACGQ,IAEH,cAACY,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAlFjB,WACjBf,GAAW,GACXE,EAAc,IACdR,EAAUE,KAAK,UA+EL,gCAKF,qBAAIH,UAAU,2BAAd,UACGM,EAAU,QAAU,SADvB,kBAIF,qBAAKN,UAAU,OAAf,SACGC,EAAUsB,KAAI,SAACC,EAAMC,GAAP,OACb,cAACC,EAAA,EAAD,CAAMJ,QAAS,kBAAMZ,EAAWe,IAAQJ,MAAM,UAA9C,SACE,cAACM,EAAA,EAAD,CAAU3B,UAAU,MAApB,SACE,cAAC,EAAD,CAAMD,KAAMyB,sBCzG9BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b428e57b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FaTimes, FaPen, FaRegCircle } from \"react-icons/fa\";\r\nconst Icon = ({ name }) => {\r\n  switch (name) {\r\n    case \"Circle\":\r\n      return <FaRegCircle className=\"icons\" />;\r\n    case \"Cross\":\r\n      return <FaTimes className=\"icons\" />;\r\n    default:\r\n      return <FaPen className=\"icons\" />;\r\n  }\r\n};\r\n\r\nexport default Icon;\r\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Icon from \"./Components/Icon\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Card, CardBody, Container, Button, Col, Row } from \"reactstrap\";\n\nconst itemArray = new Array(9).fill(\"empty\");\n\nconst App = () => {\n  const [isCross, setIsCross] = useState(false);\n  const [winMessage, setWinMessage] = useState(\"\");\n\n  const reloadGame = () => {\n    setIsCross(false);\n    setWinMessage(\"\");\n    itemArray.fill(\"empty\");\n  };\n\n  const checkIsWinner = () => {\n    if (\n      itemArray[0] !== \"empty\" &&\n      itemArray[0] === itemArray[1] &&\n      itemArray[0] === itemArray[2]\n    ) {\n      setWinMessage(`${itemArray[0]} wins `);\n    } else if (\n      itemArray[3] !== \"empty\" &&\n      itemArray[3] === itemArray[4] &&\n      itemArray[3] === itemArray[5]\n    ) {\n      setWinMessage(`${itemArray[3]} wins `);\n    } else if (\n      itemArray[6] !== \"empty\" &&\n      itemArray[6] === itemArray[7] &&\n      itemArray[6] === itemArray[8]\n    ) {\n      setWinMessage(`${itemArray[6]} wins `);\n    } else if (\n      itemArray[0] !== \"empty\" &&\n      itemArray[0] === itemArray[3] &&\n      itemArray[0] === itemArray[6]\n    ) {\n      setWinMessage(`${itemArray[0]} wins `);\n    } else if (\n      itemArray[1] !== \"empty\" &&\n      itemArray[1] === itemArray[4] &&\n      itemArray[1] === itemArray[7]\n    ) {\n      setWinMessage(`${itemArray[1]} wins `);\n    } else if (\n      itemArray[2] !== \"empty\" &&\n      itemArray[2] === itemArray[5] &&\n      itemArray[2] === itemArray[8]\n    ) {\n      setWinMessage(`${itemArray[2]} wins `);\n    } else if (\n      itemArray[0] !== \"empty\" &&\n      itemArray[0] === itemArray[4] &&\n      itemArray[0] === itemArray[8]\n    ) {\n      setWinMessage(`${itemArray[0]} wins `);\n    } else if (\n      itemArray[2] !== \"empty\" &&\n      itemArray[2] === itemArray[4] &&\n      itemArray[2] === itemArray[6]\n    ) {\n      setWinMessage(`${itemArray[2]} wins `);\n    }\n  };\n\n  const changeItem = (itemNumber) => {\n    if (winMessage) {\n      return toast(winMessage, { type: \"success\" });\n    }\n    if (itemArray[itemNumber] === \"empty\") {\n      itemArray[itemNumber] = isCross ? \"Cross\" : \"Circle\";\n      setIsCross(!isCross);\n    } else {\n      return toast(\"Already Filled\", { type: \"error\" });\n    }\n\n    checkIsWinner();\n  };\n\n  return (\n    <Container className=\"p-5\">\n      <ToastContainer position=\"bottom-center\" theme=\"colored\"></ToastContainer>\n      <Row>\n        <Col md={6} className=\"offset-md-3\">\n          {winMessage ? (\n            <div className=\"mb-2 mt-2\">\n              <h1 className=\"text-uppercase text-center text-warning \">\n                {winMessage}\n              </h1>\n              <Button color=\"success\" onClick={reloadGame}>\n                Reload The Game\n              </Button>\n            </div>\n          ) : (\n            <h1 className=\"text-center text-warning\">\n              {isCross ? \"Cross\" : \"Circle\"} has to Play\n            </h1>\n          )}\n          <div className=\"grid\">\n            {itemArray.map((item, index) => (\n              <Card onClick={() => changeItem(index)} color=\"warning\">\n                <CardBody className=\"box\">\n                  <Icon name={item}></Icon>\n                </CardBody>\n              </Card>\n            ))}\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}